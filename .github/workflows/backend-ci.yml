# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: backend CI with Maven

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    #services:
      #rabbitmq:
        #image: rabbitmq:latest
        #image: ghcr.io/pedersen/rabbitmq-action:latest
        #options: --name my-rabbitmq --publish 5672:5672
       # env:
          #RABBITMQ_DEFAULT_USER: ${{ secrets.RABBITMQ_USERNAME }}
          #RABBITMQ_DEFAULT_PASS: ${{ secrets.RABBITMQ_PASSWORD }}
        #ports:
         # - 5672:5672
         # - 15673:15672
        #options: --health-cmd "rabbitmq-diagnostics -q ping"
        #command: rabbitmq-server

      #elasticsearch:
        #image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
        #env:
          #ES_JAVA_OPTS: "-Xmx256m -Xms256m"
          #discovery.type: single-node
        #ports:
          #- 9200:9200
          #- 9300:9300
        #options: --health-cmd "curl -f http://localhost:9200/_cluster/health || exit 1"


    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run:
          #cd otc-backend
          mvn -B package -DskipTests --file pom.xml
        
      - name: Build and run services
        run: |
          docker-compose -f docker-compose.yml up -d
      
     # - name: Verify port 8000 of the app is running
       # run: |
         # sleep 10 
         # nc -zv localhost 8000
         # sleep 10s

      - name: Install Newman
        run: npm install -g newman

      - name: Run Postman tests
        run: newman run ../../src/test/java/postman_tests/postman_test_branch/collections/otc_docker.postman_collection.json -e ../../src/test/java/postman_tests/postman_test_branch/collections/otc.postman_environment.json --delay-request 1000


      #- name: Tear down services
       # run: docker-compose -f docker-compose.yml down
    
      
     # - name: trigger postman tests
        #uses: actions/checkout@v4
      #  uses: convictional/trigger-workflow-and-wait@v1.6.5
       # with:
          #owner: yvonnekw
         # repo: otc_backend_api_postman_tests
         #path: otc_backend
         # github_token: ${{ secrets.G_PERSONAL_TOKEN }}
          #workflow_file_name: otc_github_ci.yml
         # ref: fix_github_actions

     # - name: Trigger and wait for Postman tests
       # uses:  peter-evans/repository-dispatch@v1
       # with:
          #owner: yvonnekw
          #repo: otc_backend_api_postman_tests
          #github_token: ${{ secrets.G_PERSONAL_TOKEN}}
          #workflow_file_name: otc_github_ci.yml
          #ref: postman_test_branch
       # with:
         # token: ${{ secrets.G_PERSONAL_TOKEN }} # Use a valid GitHub token here
         # repository: yvonnekw/otc_backend # Repository where the workflow should be triggered
          #event-type: workflow_dispatch # Type of event to trigger (workflow_dispatch in this case)
         # client-payload: '{}' # Optional payload data (empty in this case)
        #env:
         # JAVA_HOME: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/21.0.2-13/x64
         # JAVA_HOME_21_X64: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/21.0.2-13/x64

      #- name: Start backend application
       #run: java -jar target/otc-springboot-backend-image.jar &

      #- name: Start PostgreSQL database
        #run: |
            #docker run --name postgres -p 5432:5432 -e POSTGRES_PASSWORD=password -d postgres:latest

        
     # - name: Wait for backend application to be ready
       # run: |
          #while [[ "$(curl -s -o /dev/null -w '%{http_code}' localhost:8000/user)" != "200" ]]; do sleep 5; done

          
     # - name: Logging to Docker
        #uses: docker/login-action@v3
       # with:
          #username: ${{ secrets.DOCKER_USERNAME }}
          #password: ${{ secrets.DOCKER_PASSWORD }}

      #- name: Build and push Docker images
        #uses: docker/build-push-action@v5
       # with:
          #push: true
          #tags: yvonnetest/otc-springboot-backend-image:latest
          #dockerfile: otc-backend/Dockerfile
          #context: .

